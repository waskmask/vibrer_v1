<!DOCTYPE html>
<html lang="en">
  <head>
    <meta name="theme-color" content="#1e2750" />

    <meta
      name="description"
      content="Join Vibrer's prelaunch and be the first to experience a revolutionary music platform. Connect, discover, and engage with artists and music enthusiasts worldwide."
    />
    <meta
      name="keywords"
      content="music platform, music community, music discovery, artist connection, music enthusiasts"
    />
    <%- include('../partials/head'); %>

    <link rel="stylesheet" href="/public/style/app.css?v=2.0" />
    <link rel="stylesheet" href="/public/style/app_ext.css?v=2.0" />
    <link rel="stylesheet" href="/public/style/modal.css?v=2.0" />
    <link href="/public/style/video-js.css?v=2.0" rel="stylesheet" />
    <link rel="stylesheet" href="/public/style/contests.css?v=2.0" />
    <style>
      #profile_cover,
      #profile_avatar,
      #add_gallery,
      .hidden {
        display: none;
        visibility: hidden;
        width: 0;
        height: 0;
      }
      .toast.error {
        color: rgb(179, 15, 15);
        border-color: rgb(179, 15, 15);
      }
    </style>
  </head>
  <body class="body-dark _pr">
    <!-- loader -->
    <%- include('../partials/loader'); %>

    <!-- header -->
    <header class="app_header">
      <nav class="app_layout">
        <div class="app_start_menu">
          <!-- Logo -->
          <% if (path !== '/home') { %>
          <div class="logo" onclick="toPreHome('<%= path %>')">
            <img src="/public/images/vibrer_icon.svg" alt="Logo" />
          </div>
          <% } else { %>
          <div class="logo">
            <img src="/public/images/vibrer_icon.svg" alt="Logo" />
          </div>
          <% } %>
        </div>

        <div class="app_middle_bar force_mobile">
          <ul>
            <li
              class="<%= (path == '/home') ? 'active mdb_item' : 'mdb_item' %>"
              onclick="toPreHome('<%= path %>')"
            >
              <img src="/public/images/icons/home-icon.svg" alt="Icon" />
            </li>
            <% if(profileData.user_type === 'Artist'){ %>
            <li
              class="<%= (path == '/contests') ? 'active' : '' %>"
              onclick="toTheContest('<%- path %>')"
            >
              <img src="/public/images/icons/contest-icon.svg" alt="Icon" />
            </li>
            <% } %>
          </ul>
        </div>

        <div class="app_right_menu">
          <div class="profile">
            <div class="head hphead">
              <!-- <img
                class="icon"
                src="/public/images/icons/user-icon-light.svg"
                alt="Icon"
              /> -->
              <% if (profileData.profile_img === '') { %>
              <img
                src="/public/images/default-avatar.png"
                alt="Default Avatar"
                class="avatar"
              />
              <% } else { %>
              <img
                src="<%- profileData.profile_img %>"
                alt="User Profile Image"
                class="avatar"
              />
              <% } %>
            </div>
            <div class="drop_down hpdd">
              <div class="_profile">
                <% if (profileData.profile_img === '') { %>
                <img
                  src="/public/images/default-avatar.png"
                  alt="Default Avatar"
                />
                <% } else { %>
                <img
                  src="<%- profileData.profile_img %>"
                  alt="User Profile Image"
                />
                <% } %>
                <div class="name">
                  <span><%- profileData.full_name %></span>
                  <% if(profileData.verified === true){ %>
                  <img
                    class="app_v_badge"
                    src="/public/images/icons/verified-badge.svg"
                    alt="Verified"
                  />
                  <% } %>
                </div>
                <div class="uname" id="username">
                  @<%- profileData.username %>
                </div>
              </div>

              <div class="_menu">
                <ul>
                  <li>
                    <a href="/app/pre-my-profile">
                      <img
                        src="/public/images/icons/user_icon.svg"
                        alt="Icon"
                      />
                      <span>My profile</span>
                    </a>
                  </li>
                  <li>
                    <a href="javascript:void(0)" onclick="logoutAppUser();">
                      <img src="/public/images/icons/log-off.svg" alt="Icon" />
                      <span>Logout</span>
                    </a>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </nav>
    </header>
    <main class="app_layout app_wrapper">
      <!-- main body of the app -->
      <div class="app_main preMain">
        <div class="profile_main">
          <div class="profile_header">
            <div class="_action">
              <div class="title">My profile</div>
              <div class="_options">
                <div class="head" id="myProfile_options">
                  <img
                    src="/public/images/icons/more-vertical.svg"
                    alt="Icon"
                  />
                </div>
                <div class="drop_down">
                  <div
                    class="_link"
                    id="changeCover"
                    onclick="triggerFileInput()"
                  >
                    <img src="/public/images/icons/camera.svg" alt="Camera" />
                    <div>Change cover</div>
                  </div>
                  <div class="_link" onclick="toEditProfile()">
                    <img src="/public/images/icons/edit.svg" alt="Edit" />
                    <div>Edit profile</div>
                  </div>
                </div>
              </div>
            </div>
            <div class="cover">
              <form action="">
                <input type="file" name="profile_cover" id="profile_cover" />
              </form>
              <img
                src="<%= profileData.profile_cover %>"
                alt="Cover"
                id="my_cover"
              />
            </div>
          </div>

          <div class="profile_wrapper">
            <div class="_profile_left">
              <div class="avatar">
                <img
                  src="<%= profileData.profile_img %>"
                  id="p_avatar"
                  alt="avatar"
                />
                <div id="change_avatar" onclick="triggerAvatarInput()">
                  <img src="/public/images/icons/camera.svg" alt="camera" />
                  <form action="">
                    <input
                      type="file"
                      name="profile_avatar"
                      id="profile_avatar"
                    />
                  </form>
                </div>
              </div>
              <div class="profile_top_details">
                <div class="name">
                  <span><%- profileData.full_name %></span>
                  <% if(profileData.verified === true){ %>
                  <img
                    class="app_v_badge"
                    src="/public/images/icons/verified-badge.svg"
                    alt="Verified"
                  />
                  <% } %>
                </div>
                <div class="info">
                  <%= profileData.artist_categories.map(category =>
                  category.name).join(', ') %>
                </div>
              </div>
            </div>

            <div class="profile_action">
              <button class="btn btn-primary btn-sm" onclick="toEditProfile()">
                Edit profile
              </button>
            </div>
          </div>

          <div class="profile_content_tabs" style="margin-top: 1rem">
            <div class="_tab_content active" id="userInfo">
              <div class="profile_top_details">
                <div class="name">
                  <span><%- profileData.full_name %></span>
                  <% if(profileData.verified === true){ %>
                  <img
                    class="app_v_badge"
                    src="/public/images/icons/verified-badge.svg"
                    alt="Verified"
                  />
                  <% } %>
                </div>
                <div class="info mt-1">
                  <div class="g_age">
                    <img
                      src="/public/images/icons/gender-<%= profileData.gender.toLowerCase() %>.svg"
                      alt="Gender"
                      title="%= profileData.gender %>"
                    />
                    <% function calculateAge(dateOfBirth) { const birthDate =
                    new Date(dateOfBirth); const currentDate = new Date(); let
                    age = currentDate.getFullYear() - birthDate.getFullYear();
                    if ( currentDate.getMonth() < birthDate.getMonth() ||
                    (currentDate.getMonth() === birthDate.getMonth() &&
                    currentDate.getDate() < birthDate.getDate()) ) { age--; }
                    return age; } %>
                    <div><%= calculateAge(profileData.date_of_birth) %>,</div>
                  </div>
                  <span
                    ><%= profileData.city %>, <%= profileData.country %></span
                  >
                </div>
              </div>

              <div class="title mt-3">Username:</div>
              <div class="data"><%= profileData.username %></div>

              <div class="title mt-3">Genre:</div>
              <div class="data">
                <%= profileData.genres.map(genre => genre.name).join(', ') %>
              </div>

              <div class="title mt-3">Other links:</div>
              <div class="p_social_links mt-2">
                <% for (let platform in profileData.link) { %>
                <div class="link">
                  <div class="title">
                    <%= platform.charAt(0).toUpperCase() + platform.slice(1) %>
                  </div>
                  <a href="<%= profileData.link[platform] %>" target="_blank">
                    <img
                      src="/public/images/icons/<%= platform %>_link.svg"
                      alt="<%= platform %> link"
                    />
                  </a>
                </div>
                <% } %>
              </div>

              <div class="title mt-3">Bio:</div>
              <div class="data"><%= profileData.bio %></div>

              <div class="p_gallery mt-4 mb-3">
                <div class="title">Gallery:</div>
                <button
                  class="btn btn-sm btn-primary"
                  onclick="triggerGalleryInput()"
                >
                  Add images
                </button>
                <form action="" class="hidden">
                  <input
                    type="file"
                    name="add_gallery"
                    id="add_gallery"
                    multiple
                  />
                </form>
              </div>
              <div class="p_gallery_data" id="galleryData">
                <% profileData.gallery.forEach(image => { %>
                <div class="item">
                  <div class="remove" data-gallery-id="<%= image._id %>">+</div>
                  <img src="<%= image.media_url %>" alt="<%= image.title %>" />
                </div>
                <% }); %>
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>

    <!-- javascript -->
    <script src="/public/js/redirections.js?v=2.0"></script>
    <script src="/public/js/general.js?v=2.0"></script>
    <script src="/public/js/_modal.js?v=2.0"></script>
    <script src="/public/js/video.min.js?v=2.0"></script>
    <script src="/public/js/Youtube.min.js?v=2.0"></script>
    <script src="/public/js/config.js?v=2.0"></script>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        var headElement = document.getElementById("myProfile_options");
        var dropdown = headElement.nextElementSibling;

        // Toggle dropdown on clicking the head element
        headElement.addEventListener("click", function (event) {
          dropdown.classList.toggle("active");
          event.stopPropagation(); // Prevent the document click event from firing immediately
        });

        // Close dropdown when clicking anywhere outside
        document.addEventListener("click", function (event) {
          if (
            !headElement.contains(event.target) &&
            !dropdown.contains(event.target)
          ) {
            dropdown.classList.remove("active");
          }
        });

        // tab menu
        var tabItems = document.querySelectorAll("._tab_menu ._item");

        tabItems.forEach(function (item) {
          item.addEventListener("click", function () {
            // Remove active class from all items
            tabItems.forEach(function (i) {
              i.classList.remove("active");
            });

            // Add active class to clicked item
            item.classList.add("active");

            // Get target content ID
            var target = item.getAttribute("target");

            // Hide all tab contents
            document
              .querySelectorAll("._tab_content")
              .forEach(function (content) {
                content.classList.remove("active");
              });

            // Show target tab content
            var targetContent = document.querySelector(target);
            if (targetContent) {
              targetContent.classList.add("active");
            }
          });
        });
      });
    </script>
    <script>
      document.addEventListener("DOMContentLoaded", function () {
        var moreButtons = document.querySelectorAll(".more-btn");

        moreButtons.forEach(function (button) {
          button.addEventListener("click", function () {
            var contentDiv = this.closest(".content");
            contentDiv.classList.toggle("expanded");
          });
        });
      });
    </script>
    <script>
      function triggerFileInput() {
        const profileCoverInput = document.getElementById("profile_cover");

        profileCoverInput.click();

        profileCoverInput.onchange = function (event) {
          if (event.target.files && event.target.files[0]) {
            const reader = new FileReader();

            reader.onload = function (e) {
              document.getElementById("my_cover").src = e.target.result;
              const file = event.target.files[0];
              uploadCoverPhotoToServer(file, "profile_cover");
            };

            reader.readAsDataURL(event.target.files[0]);
          }
        };
      }

      function uploadCoverPhotoToServer(file, column) {
        const apiUrl = `${API_URL}upload/profile-cover-image`;
        const formData = new FormData();
        formData.append("profile_cover_image", file);

        fetch(apiUrl, {
          method: "POST",
          body: formData,
          headers: {
            Authorization: `Bearer ${localStorage.getItem("appUserToken")}`,
          },
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.status === 1) {
              const coverImage = data.result;
              saveCoverImageURL(coverImage, column);
            }
          })
          .catch((error) => {
            showToastError(`Error! ${error}`);
          });
      }

      function saveCoverImageURL(coverImageURL, column) {
        const apiUrlSaveCoverPhoto = `${API_URL}update/appUserSpecificColumn`;

        const payload = {
          id: "<%- profileData._id %>",
          column: column,
          value: coverImageURL,
        };

        fetch(apiUrlSaveCoverPhoto, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${localStorage.getItem("appUserToken")}`,
          },
          body: JSON.stringify(payload),
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.status === 1) {
              if (column === "profile_cover") {
                showToastSuccess("Cover image uploaded successfully!");
              } else {
                showToastSuccess("Avatar image uploaded successfully!");
              }
            } else {
              showToastError(`Error! ${data.message}`);
            }
          })
          .catch((error) => {
            showToastError(`Error! Something went wrong`);
          });
      }

      function triggerAvatarInput() {
        document.getElementById("profile_avatar").click();

        document.getElementById("profile_avatar").onchange = function (event) {
          if (event.target.files && event.target.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
              document.getElementById("p_avatar").src = e.target.result;
              const file = event.target.files[0];
              uploadCoverPhotoToServer(file, "profile_img");
            };
            reader.readAsDataURL(event.target.files[0]);
          }
        };
      }

      function triggerGalleryInput() {
        document.getElementById("add_gallery").click();

        document.getElementById("add_gallery").onchange = function (event) {
          if (event.target.files) {
            Array.from(event.target.files).forEach((file) => {
              const reader = new FileReader();
              reader.onload = function (e) {
                const galleryData = document.getElementById("galleryData");
                const item = document.createElement("div");
                item.className = "item";
                item.innerHTML = `
                <!--div class="remove">+</div-->
                <img src="${e.target.result}" alt="gallery" />
              `;
                galleryData.appendChild(item);
                const file = event.target.files[0];
                uploadGalleryImageToServer(file);
              };
              reader.readAsDataURL(file);
            });
          }
        };
      }

      function uploadGalleryImageToServer(file) {
        const apiUrl = `${API_URL}upload/gallery-image`;
        const formData = new FormData();
        formData.append("gallery_img", file);

        fetch(apiUrl, {
          method: "POST",
          body: formData,
          headers: {
            Authorization: `Bearer ${localStorage.getItem("appUserToken")}`,
          },
        })
          .then((response) => response.json())
          .then((data) => {
            if (data.status === 1) {
              showToastSuccess("image uploaded successfully!");
            } else {
              showToastError(`Error! ${data.message}`);
            }
          })
          .catch((error) => {
            showToastError(`Error! ${error}`);
          });
      }

      function showToastSuccess(message) {
        let toast = document.querySelector(".toast");

        if (!toast) {
          toast = document.createElement("div");
          toast.className = "toast success";
          document.body.appendChild(toast);
        }

        toast.textContent = message;

        toast.classList.add("show");

        setTimeout(() => {
          toast.classList.remove("show");
        }, 2000);
      }
      function showToastError(message) {
        let toast = document.querySelector(".toast");

        if (!toast) {
          toast = document.createElement("div");
          toast.className = "toast error";
          document.body.appendChild(toast);
        }

        toast.textContent = message;

        toast.classList.add("show");

        setTimeout(() => {
          toast.classList.remove("show");
        }, 2000);
      }

      document
        .getElementById("galleryData")
        .addEventListener("click", function (event) {
          if (event.target.classList.contains("remove")) {
            const galleryId = event.target.getAttribute("data-gallery-id");
            removeItem(event.target, galleryId);
          }
        });

      function removeItem(element, galleryId) {
        const url = `${API_URL}remove/gallery-image/${galleryId}`;
        fetch(url, {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${localStorage.getItem("appUserToken")}`,
          },
        })
          .then((response) => {
            if (!response.ok) {
              throw new Error(`HTTP error! Status: ${response.status}`);
            }
            return response.json();
          })
          .then((data) => {
            // Check the API response and handle success
            element.parentElement.remove();
            showToastSuccess("Image removed from gallery");
          })
          .catch((error) => {
            console.error("Error removing gallery image:", error);
            showToastError("Failed to remove image from gallery");
          });
      }
    </script>
  </body>
</html>
