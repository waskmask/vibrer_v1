<!DOCTYPE html>
<html lang="en">
  <head>
    <meta name="theme-color" content="#1e2750" />

    <meta
      name="description"
      content="Join Vibrer's prelaunch and be the first to experience a revolutionary music platform. Connect, discover, and engage with artists and music enthusiasts worldwide."
    />
    <meta
      name="keywords"
      content="music platform, music community, music discovery, artist connection, music enthusiasts"
    />
    <%- include('../partials/head'); %>

    <link href="/public/style/quill.snow.css?v=3.0" rel="stylesheet" />
    <link rel="stylesheet" href="/public/style/app.css?v=3.0" />
    <link rel="stylesheet" href="/public/style/app_ext.css?v=3.0" />
    <link rel="stylesheet" href="/public/style/modal.css?v=3.0" />
    <link href="/public/style/video-js.css?v=3.0" rel="stylesheet" />
    <link rel="stylesheet" href="/public/style/contests.css?v=3.0" />

    <style>
      :root {
        --dd-radius: 4px !important;
        --dd-shadow: 0 0 2.5em rgba(0, 0, 0, 0.1);
        --dd-overlay: rgba(0, 0, 0, 0.75);
        --dd-background: #ffffff;
        --dd-text1: #080813;
        --dd-text2: #ffffff;
        --dd-primary: #f32377;
        --dd-gradient: linear-gradient(45deg, #fb6580, #f32377) !important;
        --dd-monthBackground: var(--dd-gradient);
        --dd-monthText: var(--dd-text2);
        --dd-monthBorder: transparent;
        --dd-confirmButtonBackground: var(--dd-gradient);
        --dd-confirmButtonText: var(--dd-text2);
        --dd-selectedBackground: var(--dd-gradient);
        --dd-selectedText: var(--dd-text2);
      }
      .dd__dropdown:not(.dd-inline).dd-shown {
        transform: translateY(-5%) translateX(-50%) !important;
      }
    </style>
  </head>
  <body class="body-dark _pr">
    <!-- loader -->
    <%- include('../partials/loader'); %>

    <!-- header -->
    <header class="app_header">
      <nav class="app_layout">
        <div class="app_start_menu">
          <!-- Logo -->
          <% if (path !== '/home') { %>
          <div class="logo" onclick="toPreHome('<%= path %>')">
            <img src="/public/images/vibrer_icon.svg" alt="Logo" />
          </div>
          <% } else { %>
          <div class="logo">
            <img src="/public/images/vibrer_icon.svg" alt="Logo" />
          </div>
          <% } %>
        </div>

        <div class="app_middle_bar force_mobile">
          <ul>
            <li
              class="<%= (path == '/home') ? 'active mdb_item' : 'mdb_item' %>"
              onclick="toPreHome('<%= path %>')"
            >
              <img src="/public/images/icons/home-icon.svg" alt="Icon" />
            </li>

            <li
              class="<%= (path == '/contest') ? 'active' : '' %>"
              onclick="toTheContest('<%- path %>')"
            >
              <img src="/public/images/icons/contest-icon.svg" alt="Icon" />
            </li>
          </ul>
        </div>

        <div class="app_right_menu">
          <div class="profile">
            <div class="head hphead">
              <!-- <img
                class="icon"
                src="/public/images/icons/user-icon-light.svg"
                alt="Icon"
              /> -->
              <% if (profileData.profile_img === '') { %>
              <img
                src="/public/images/default-avatar.png"
                alt="Default Avatar"
                class="avatar"
              />
              <% } else { %>
              <img
                src="<%- profileData.profile_img %>"
                alt="User Profile Image"
                class="avatar"
              />
              <% } %>
            </div>
            <div class="drop_down hpdd">
              <div class="_profile">
                <% if (profileData.profile_img === '') { %>
                <img
                  src="/public/images/default-avatar.png"
                  alt="Default Avatar"
                />
                <% } else { %>
                <img
                  src="<%- profileData.profile_img %>"
                  alt="User Profile Image"
                />
                <% } %>
                <div class="name">
                  <span><%- profileData.full_name %></span>
                  <% if(profileData.verified === true){ %>
                  <img
                    class="app_v_badge"
                    src="/public/images/icons/verified-badge.svg"
                    alt="Verified"
                  />
                  <% } %>
                </div>
                <div class="uname" id="username">
                  @<%- profileData.username %>
                </div>
              </div>

              <div class="_menu">
                <ul>
                  <li>
                    <a href="/app/pre-my-profile">
                      <img
                        src="/public/images/icons/user_icon.svg"
                        alt="Icon"
                      />
                      <span><%- __("my_profile")%></span>
                    </a>
                  </li>
                  <li>
                    <a href="javascript:void(0)" onclick="logoutAppUser();">
                      <img src="/public/images/icons/log-off.svg" alt="Icon" />
                      <span><%- __("logout")%></span>
                    </a>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
      </nav>
    </header>
    <main class="app_layout app_wrapper">
      <!-- main body of the app -->
      <div class="app_main preMain">
        <div class="title"><%- __("edit_your_profile")%></div>
        <form
          class="form edit-my-profile"
          id="stepForm"
          action="javascript:void(0)"
          method="post"
          autocomplete="off"
        >
          <div class="grid-2-sm mt-3">
            <div>
              <label for="userName" class="i_label"><%- __("username")%></label>
              <input
                type="text"
                id="userName"
                placeholder="<%- __('username')%>"
                name="username"
                autocomplete="off"
                value="<%- profileData.username %>"
                oninput="validateUsername(this.value)"
                onblur="handleBlurEvent(this)"
                minlength="3"
                maxlength="20"
                class="tlow"
              />
              <div
                id="usernameErrorMessage"
                class="form-alert error"
                style="display: none"
              ></div>
            </div>
          </div>
          <div class="mt-3">
            <label for="full_name" class="i_label"><%- __("full_name")%></label>
            <input
              type="text"
              id="full_name"
              placeholder="<%- __('full_name')%> *"
              name="full_name"
              autocomplete="off"
              required
              value="<%- profileData.full_name %>"
              minlength="3"
              maxlength="20"
            />
          </div>
          <div class="grid-2-sm g-3 mt-3">
            <div class="genderInputWrapper">
              <label for="gender" class="i_label"><%- __("gender")%></label>
              <div class="custom-select dfac" id="gender-opt">
                <div class="select-value dark"><%- profileData.gender %></div>
                <div class="options">
                  <div class="option" value="Male"><%- __("male")%></div>
                  <div class="option" value="Female"><%- __("female")%></div>
                </div>
                <input
                  id="gender"
                  type="hidden"
                  name="gender"
                  value="<%- profileData.gender %>"
                  autocomplete="off"
                  required
                />
              </div>
            </div>
            <div id="dateInputWrapper">
              <label for="dob" class="i_label"><%- __("dob")%></label>
              <div class="date-input w-100">
                <input
                  type="date"
                  name="date_of_birth"
                  id="dob"
                  placeholder="<%- __('dob')%> *"
                  autocomplete="off"
                  required
                  value="<%- (profileData.date_of_birth && new Date(profileData.date_of_birth).toISOString().split('T')[0]) || '' %>"
                />
              </div>
            </div>
            <div>
              <input
                type="text"
                id="city-input"
                name="city"
                autocomplete="off"
                placeholder="<%=__('city')%> *"
                required
                class="tcap"
                value="<%- profileData.city %>"
              />
            </div>
            <div class="countryInputWrapper">
              <div class="custom-select dfac" id="country-opt">
                <div class="placeholder selected">
                  <% var countryKey = profileData.country.toLowerCase(); %> <%-
                  __(''+countryKey) %>
                </div>
                <%- include('partials/_countriesOptions') %>

                <input
                  type="hidden"
                  name="country"
                  value="<%- profileData.country %>"
                  id="country-input"
                  autocomplete="off"
                  required
                />
              </div>
            </div>
          </div>
          <% if(profileData.user_type === 'Artist'){ %>

          <div class="custom-select-wrapper mt-4 mb-4">
            <label for="artist_categories" class="i_label">I am a?</label>
            <div class="custom-check-select dfac" id="artists">
              <div class="placeholder"><%- __('im_a')%>? *</div>
              <div class="check-options">
                <div class="check-list grid-2-sm">
                  <% if (artistCategoriesData && artistCategoriesData.length >
                  0) { artistCategoriesData.forEach(artistCategory => { const
                  isChecked = profileData.artist_categories.some( category =>
                  category._id === artistCategory._id ); %>
                  <label class="checkbox-container">
                    <%= __("artist_categories." + artistCategory.name) %> <input
                    type="checkbox" <% if (isChecked) { // prettier-ignore
                    %>checked<% } %> value="<%= artistCategory._id %>"
                    data-value="<%= artistCategory.name %>" />
                    <span class="checkmark"></span>
                  </label>
                  <% }); } %>
                </div>
                <input
                  type="hidden"
                  id="artist_categories"
                  name="artist_categories"
                  value="<%= profileData.artist_categories.map(category => category._id).join(',') %>"
                  selectedValues="<%= profileData.artist_categories.map(category => category.name).join(',') %>"
                  autocomplete="off"
                />
                <div class="divider w-100 mt-4"></div>
                <div class="ccs-foter dfjcfe">
                  <button
                    class="btn btn-primary h-auto close-options"
                    type="button"
                  >
                    <%= __("done") %>
                  </button>
                </div>
              </div>
            </div>
            <div class="selected-items" style="display: flex">
              <% if (profileData.artist_categories &&
              profileData.artist_categories.length > 0) {
              profileData.artist_categories.forEach(selectedCategory => { %>
              <div class="item">
                <div class="item-name" data-value="<%= selectedCategory._id %>">
                  <%= __("artist_categories." + selectedCategory.name) %>
                </div>
              </div>
              <% }); } %>
            </div>
          </div>

          <div class="custom-select-wrapper">
            <label for="genres" class="i_label">Genre</label>
            <div class="custom-check-select dfac" id="genre">
              <div class="placeholder">Genre *</div>
              <div class="check-options">
                <div class="check-list grid-2-sm">
                  <% if (genreData && genreData.length > 0) {
                  genreData.forEach(genre => { const isChecked =
                  profileData.genres.some( genres => genres._id === genre._id );
                  %>
                  <label class="checkbox-container">
                    <%= __("genres." + genre.name) %> <input type="checkbox" <%
                    if (isChecked) { // prettier-ignore %>checked<% } %>
                    value="<%= genre._id %>" data-value="<%= genre.name %>" />
                    <span class="checkmark"></span>
                  </label>
                  <% }); } %>
                </div>
                <input
                  type="hidden"
                  id="genres"
                  name="genres"
                  value="<%= profileData.genres.map(genre => genre._id).join(',') %>"
                  selectedValues="<%= profileData.genres.map(genre => genre.name).join(',') %>"
                  autocomplete="off"
                />
                <div class="divider w-100 mt-4"></div>
                <div class="ccs-foter dfjcfe">
                  <button
                    class="btn btn-primary h-auto close-options"
                    type="button"
                  >
                    <%= __("done") %>
                  </button>
                </div>
              </div>
            </div>
            <div class="selected-items" style="display: flex">
              <% if (profileData.genres && profileData.genres.length > 0) {
              profileData.genres.forEach(genres => { %>
              <div class="item">
                <div class="item-name" data-value="<%= genres._id %>">
                  <%= __("genres." + genres.name) %>
                </div>
              </div>
              <% }); } %>
            </div>
          </div>
          <% }%>
          <div class="mb-3 mt-4">
            <label class="i_label"><%= __("bio") %></label>
            <div id="bio" style="height: auto; min-height: 100px">
              <%- profileData.bio %>
            </div>
          </div>

          <div class="mb-3">
            <label for="youtube" class="i_label"><%= __("youtube") %></label>
            <input
              id="youtube"
              type="text"
              placeholder="<%= __('youtube') %>"
              autocomplete="off"
              name="youtube"
              value="<%- profileData.link.youtube %>"
            />
          </div>
          <div class="mb-3">
            <label for="instagram" class="i_label"
              ><%= __('instagram') %></label
            >
            <input
              id="instagram"
              type="text"
              placeholder="<%= __('instagram') %>"
              autocomplete="off"
              name="instagram"
              value="<%- profileData.link.instagram %>"
            />
          </div>
          <div class="mb-3">
            <label for="facebook" class="i_label"><%= __('facebook') %></label>
            <input
              id="facebook"
              type="text"
              placeholder="<%= __('facebook') %>"
              autocomplete="off"
              name="facebook"
              value="<%- profileData.link.facebook %>"
            />
          </div>
          <div class="mb-3">
            <label for="twitter" class="i_label"><%= __('twitter') %></label>
            <input
              id="twitter"
              type="text"
              placeholder="<%= __('twitter') %>"
              autocomplete="off"
              name="twitter"
              value="<%- profileData.link.twitter %>"
            />
          </div>
          <div class="mb-3">
            <label for="website" class="i_label"><%= __('website') %></label>
            <input
              id="website"
              type="text"
              placeholder="<%= __('website') %>"
              autocomplete="off"
              name="website"
              value="<%- profileData.link.website %>"
            />
          </div>
          <div class="error-message mt-3 d-none"></div>
          <div class="success-message mt-3 d-none"></div>

          <div class="mt-4">
            <button class="btn btn-primary submitBtn" type="submit">
              <%= __('update_info') %>
            </button>
          </div>
        </form>

        <button
          class="btn mt-4"
          onclick="window.location.href='/app/pre-my-profile';"
        >
          <%-__('my_profile')%>
        </button>

        <!-- footer -->
        <div class="temp_footer">
          <div class="top">
            <div class="link">
              <a target="_blank" href="/imprint"><%= __("imprint") %></a>
            </div>
            <div class="link">
              <a target="_blank" href="/privacy"> <%= __("privacyPolicy") %></a>
            </div>
            <div class="link">
              <a target="_blank" href="/terms"><%= __("termsOfUse") %></a>
            </div>
            <div class="link">
              <a target="_blank" href="/cookies">
                <%= __("cookieSettings") %></a
              >
            </div>
            <div class="link">
              <a target="_blank" href="/"> <%= __("Home") %></a>
            </div>
          </div>
          <div class="social-icons">
            <a href="https://www.youtube.com/@vibrer-official" target="_blank">
              <img
                class="yti"
                src="/public/images/youtube.svg"
                alt="Youtube icon"
            /></a>
            <a
              href="https://www.instagram.com/vibrer_official/"
              target="_blank"
            >
              <img src="/public/images/instagram.svg" alt="Instagram icon"
            /></a>
          </div>

          <div class="footer-languagebar mt-3">
            <div class="app-languageSwitcher me-1">
              <div class="item" data-value="en">
                <span><%= __("English") %></span>
              </div>
              <div class="item" data-value="fr">
                <span><%= __("French") %></span>
              </div>
              <div class="item" data-value="de">
                <span><%= __("German") %></span>
              </div>
              <div class="item" data-value="it">
                <span><%= __("Italian") %></span>
              </div>
              <div class="item" data-value="pt">
                <span><%= __("Portuguese") %></span>
              </div>
              <div class="item" data-value="tr">
                <span><%= __("Turkish") %></span>
              </div>
            </div>
          </div>

          <div class="bottom">
            <%- __("copyright").replace("{year}", new Date().getFullYear()) %>
          </div>
        </div>
        <!-- app main end -->
      </div>
    </main>

    <!-- javascript -->
    <script src="/public/js/redirections.js?v=3.0"></script>
    <script src="/public/js/general.js?v=3.0"></script>
    <script src="/public/js/app_language.js"></script>
    <script src="/public/js/_modal.js?v=3.0"></script>
    <script src="/public/js/video.min.js?v=3.0"></script>
    <script src="/public/js/cookieBanner.js?v=3.0"></script>
    <script src="/public/js/select.js?v=3.0"></script>
    <script src="/public/js/check-select.js?v=3.0"></script>
    <script src="/public/plugins/datedropper/datedropper-javascript.js?v=3.0"></script>
    <script src="/public/js/quill.min.js?v=3.0"></script>
    <!-- <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyD4ijUxSISsbNS29gjv8onur04fqQ8zets&libraries=places"></script> -->
    <script src="/public/js/config.js?v=3.0"></script>

    <script>
      //   date
      document.addEventListener("DOMContentLoaded", (event) => {
        function calculateMaxYear() {
          const currentDate = new Date();
          const maxYear = currentDate.getFullYear() - 14;
          return maxYear;
        }

        const maxYear = calculateMaxYear();

        new dateDropper({
          selector: "#dob",
          format: "y-mm-dd",
          lang: "<%= __('lang') %>",
          showArrowsOnHover: true,
          overlay: false,
          expandable: false,
          expandedOnly: false,
          doubleView: false,
          startFromMonday: false,
          maxYear: maxYear.toString(),
          minYear: "1900",
          // jump: "10",
          range: false,
          defaultDate: "<%- profileData.date_of_birth %>", // Example default date
        });

        var quill = new Quill("#bio", {
          modules: {
            toolbar: false, // This hides the toolbar
          },
          placeholder: " <%= __('bio') %> *",
          theme: "snow",
        });

        document
          .querySelector("#stepForm")
          .addEventListener("submit", async (e) => {
            e.preventDefault();
            const errorPop = document.querySelector(".error-message");
            const successPop = document.querySelector(".success-message");
            const btn = document.querySelector(".submitBtn");

            btn.textContent = "<%= __('loading') %>";
            btn.disabled = true;

            const form = e.target;
            const formData = new FormData(form);

            // Convert FormData to JSON
            const formDataJSON = {};
            formData.forEach((value, key) => {
              formDataJSON[key] = value.trim(); // Trim each value
            });

            const genresString = formDataJSON.genres;
            if (genresString) {
              formDataJSON.genres = genresString
                .split(",")
                .map((genre) => genre.trim());
            }

            const artistCategoriesString = formDataJSON.artist_categories;
            if (artistCategoriesString) {
              formDataJSON.artist_categories = artistCategoriesString
                .split(",")
                .map((category) => category.trim());
            }
            formDataJSON.bio = quill.root.innerHTML;

            const url = `${API_URL}update/appUser`;

            try {
              const response = await fetch(url, {
                method: "PATCH",
                headers: {
                  "Content-Type": "application/json",
                  Authorization: `Bearer ${localStorage.getItem(
                    "appUserToken"
                  )}`,
                },
                body: JSON.stringify(formDataJSON),
              });

              const responseData = await response.json();
              if (response.status === 201 || response.status === 200) {
                if (responseData.status === 1) {
                  // Handle success
                  successPop.style.display = "block";
                  successPop.innerHTML = "<%= __('profileCompletedSuccess') %>";
                  setTimeout(() => {
                    successPop.style.display = "none";
                    // window.location.href = window.location.href;
                  }, 5000);
                  // form.reset();
                } else {
                  // Handle API response with an error status
                  errorPop.style.display = "block";
                  if (responseData.error) {
                    responseData.message = responseData.error;
                  }
                  errorPop.innerHTML = responseData.message;
                  setTimeout(() => {
                    errorPop.style.display = "none";
                  }, 5000);
                }
              } else {
                // Handle HTTP error
                errorPop.style.display = "block";
                if (responseData.error) {
                  responseData.message = responseData.error;
                }
                errorPop.innerHTML = responseData.message;
                setTimeout(() => {
                  errorPop.style.display = "none";
                }, 5000);
              }
              btn.textContent = "<%= __('update_info') %>";
              btn.disabled = false;
            } catch (err) {
              // Handle fetch error
              console.error("An error occurred", err);
              btn.textContent = "<%= __('update_info') %>";
              btn.disabled = false;
            }
          });
      });
    </script>
    <script>
      let isUserLeftInputBox = false;

      function handleBlurEvent(inputElement) {
        isUserLeftInputBox = true;
        validateUsername(inputElement.value.trim());
      }

      function validateUsername(username) {
        const usernameRegex = /^[a-zA-Z0-9 _.-]+$/;
        const minLength = 3;
        const errorMessageContainer = document.getElementById(
          "usernameErrorMessage"
        );

        if (!username.trim()) {
          displayError("<%-__('username_empty')%>");
        } else if (username.length < minLength) {
          displayError("<%-__('username_must_3')%>");
        } else if (!usernameRegex.test(username)) {
          displayError("<%-__('username_validation')%>");
        } else {
          clearError();
          if (isUserLeftInputBox) {
            // Call the API only if the user has left the input box
            checkUsernameAvailability(username);
          }
        }
      }

      function displayError(message) {
        const errorMessageContainer = document.getElementById(
          "usernameErrorMessage"
        );
        errorMessageContainer.textContent = message;
        errorMessageContainer.style.display = "block";
      }

      function clearError() {
        const errorMessageContainer = document.getElementById(
          "usernameErrorMessage"
        );
        errorMessageContainer.textContent = "";
        errorMessageContainer.style.display = "none";
      }

      async function checkUsernameAvailability(username) {
        try {
          const url = `${API_URL}/check/username`;

          const response = await fetch(url, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
              Authorization: `Bearer ${localStorage.getItem("appUserToken")}`,
            },
            body: JSON.stringify({ username }),
          });

          const data = await response.json();

          if (data && data.status === 0 && data.result.is_exists) {
            displayError("<%-__('username_taken')%>");
          }
        } catch (error) {
          console.error("<%-__('error_checking_username')%>", error);
        }
      }
    </script>
    <script>
      async function logoutAppUser() {
        try {
          // Clear token from localStorage
          localStorage.removeItem("appUserToken");

          // Clear token from server session
          await fetch("/clear-token-in-session", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            // You might need to send the token to the server for verification
            // Add it to the body if required
            body: JSON.stringify({
              // token: getStoredTokenFromLocalStorage(),
            }),
          });

          // Redirect to the logout page or any other desired action
          window.location.href = "/login";
        } catch (error) {
          console.error("Error during logout:", error);
          // Handle the error as needed
        }
      }
    </script>
  </body>
</html>
