<!DOCTYPE html>
<html lang="<%- __('lang') %>">
  <head>
    <script src="/public/js/languageSwitcher.js"></script>
    <meta
      name="description"
      content="Join Vibrer's prelaunch and be the first to experience a revolutionary music platform. Connect, discover, and engage with artists and music enthusiasts worldwide."
    />
    <meta
      name="keywords"
      content="music platform, prelaunch, music community, music discovery, artist connection, music enthusiasts"
    />
    <%- include('partials/head'); %>
    <link rel="stylesheet" href="/public/style/app.css?v=2.0" />
  </head>

  <body>
    <!-- Loader -->
    <%- include('partials/loader'); %>
    <main>
      <section class="auth auth-pages" id="register">
        <div class="auth-container">
          <img
            class="bg-img"
            src="/public/images/auth-register.jpg"
            alt="Image"
          />
          <div class="overlay"></div>
          <div class="left-col">
            <div class="title"><%=__("signup_page_text")%></div>
          </div>
          <div class="auth-col">
            <div class="form-wrapper">
              <img
                class="logo"
                src="/public/images/vibrer_light_logo.svg"
                alt="Logo"
              />
              <div class="title"><%=__("create_new_account")%></div>
              <div class="sub"><%=__("signup_sub")%></div>
              <form
                action="javascript:void(0)"
                id="registrationForm"
                method="POST"
                autocomplete="off"
              >
                <div class="label text-white"><%=__("im_an")%>?</div>
                <div class="custom-radio-label">
                  <div
                    class="label active"
                    onclick="handleRadioClick(this, 'Artist')"
                  >
                    <%=__("artist")%>
                  </div>
                  <div class="label" onclick="handleRadioClick(this, 'Fan')">
                    <%=__("fan")%>
                  </div>
                </div>
                <!-- Hidden input field to store the selected value -->
                <input
                  type="hidden"
                  id="type"
                  name="user_type"
                  value="Artist"
                />

                <div class="mb-3">
                  <input
                    class="form-input"
                    type="email"
                    placeholder=" <%=__('email_address')%>"
                    name="email"
                    id="registerEmail"
                    required
                    autocomplete="off"
                  />
                </div>
                <div class="mb-3 passInputDiv">
                  <input
                    class="form-input"
                    type="password"
                    placeholder=" <%=__('password')%>"
                    name="password"
                    required
                    autocomplete="off"
                    id="registerPassword"
                  />
                  <div class="passInput">
                    <img src="/public/images/icons/visibility.svg" alt="Icon" />
                  </div>
                </div>

                <div class="mb-3 passInputDiv">
                  <input
                    class="form-input"
                    type="password"
                    placeholder=" <%=__('confirm_password')%>"
                    id="confirmPassword"
                    name="confirmPassword"
                  />
                  <div class="passInput">
                    <img src="/public/images/icons/visibility.svg" alt="Icon" />
                  </div>
                </div>

                <div class="notice mb-4"><%-__('signup_agreement')%></div>
                <div class="error-message mt-3 d-none"></div>
                <div class="success-message mt-3 d-none">
                  You have successfully registered.
                  <br />
                  You will receive a verification email shortly, if not found,
                  check spam folder.
                </div>
                <button class="btn btn-primary w-100 submitBtn" type="submit">
                  <%=__('sign_up')%>
                </button>
              </form>

              <div class="text-white mt-4 dfac">
                <%=__('already_have_account')%>
                <a class="link-primary dfac ms-1" href="/login"
                  ><%=__('login')%>
                  <img
                    src="/public/images/icons/arrow-right-long-primary.svg"
                    alt="icon"
                /></a>
              </div>
            </div>
          </div>
        </div>
      </section>
    </main>
    <!-- javascript -->
    <script src="/public/js/cookieBanner.js?v=2.0"></script>
    <script src="/public/js/theme-v01node.js?v=2.0"></script>
    <script src="/public/js/languageSwitcher.js"></script>
    <script src="/public/js/authForm.js?v=2.0"></script>
    <script src="/public/js/config.js?v=2.0"></script>
    <script>
      function handleRadioClick(clickedElement, value) {
        // Remove the "active" class from all label elements
        const allLabels = document.querySelectorAll(".label");
        allLabels.forEach((label) => label.classList.remove("active"));

        // Add the "active" class to the clicked label element
        clickedElement.classList.add("active");

        // Save the selected value to the hidden input field
        const hiddenInput = document.getElementById("type");
        hiddenInput.value = value;
      }

      var localizedStrings = {
        emailIsRequired: "<%= __('email_is_required') %>",
        emailMustBeValid: "<%= __('email_must_be_valid') %>",
        passMustBeAtleast: "<%= __('password_must_be_at_least') %>",
        passwordDidNotMatch: "<%= __('password_did_not_match') %>",
        loading: "<%= __('loading') %>",
        signUp: "<%= __('sign_up') %>",
        emailAlreadyUsed: "<%= __('email_already_used') %>",
      };
      document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("registrationForm");
        const btn = document.querySelector(".submitBtn");
        const successPop = document.querySelector(".success-message");
        const errorPop = document.querySelector(".error-message");
        // Disable HTML5 validation
        form.setAttribute("novalidate", "");
        form.addEventListener("submit", function (e) {
          e.preventDefault();

          // Change button text to "Sending..."
          btn.textContent = localizedStrings.loading;
          btn.disabled = true;
          // Implement the timeout function
          setTimeout(async () => {
            let isValid = true;
            let customErrors = {};

            const formData = new FormData(form);
            const formDataJSON = Object.fromEntries(formData.entries());

            // Validation
            for (const key in formDataJSON) {
              formDataJSON[key] = formDataJSON[key].trim();
            }

            const { type, email, password, confirmPassword } = formDataJSON;

            if (
              !email ||
              !/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/.test(email)
            ) {
              isValid = false;
              customErrors.email = !email
                ? localizedStrings.emailIsRequired
                : localizedStrings.emailMustBeValid;
            }

            if (password.length < 6) {
              isValid = false;
              customErrors.password = localizedStrings.passMustBeAtleast;
            }

            if (password !== confirmPassword) {
              isValid = false;
              customErrors.confirmPassword =
                localizedStrings.passwordDidNotMatch;
            }

            // Clear previous error alerts
            const prevAlerts = document.querySelectorAll(".form-alert");
            prevAlerts.forEach((alert) => alert.remove());

            if (isValid) {
              const url = `${API_URL}registerUser`;
              try {
                const response = await fetch(url, {
                  method: "POST",
                  headers: {
                    "Content-Type": "application/json",
                  },
                  body: JSON.stringify(formDataJSON),
                });
                const responseData = await response.json();
                if (response.status === 201 || response.status === 200) {
                  if (responseData.status === 1) {
                    // successPop.style.display = "block";
                    localStorage.setItem(
                      "appUserToken",
                      responseData.result.token
                    );
                    await fetch("/store-token-in-session", {
                      method: "POST",
                      headers: {
                        "Content-Type": "application/json",
                      },
                      body: JSON.stringify({
                        token: responseData.result.token,
                      }),
                    });

                    window.location.href = "/register-successfull";

                    form.reset();
                  } else {
                    errorPop.style.display = "block";
                    errorPop.innerHTML = localizedStrings.emailAlreadyUsed;
                    setTimeout(() => {
                      errorPop.style.display = "none";
                    }, 5000);
                  }
                } else {
                  console.log(response);
                }
              } catch (err) {
                console.error("An error occurred", err);
              }
            } else {
              for (const key in customErrors) {
                const inputElement = form.querySelector(`[name="${key}"]`);
                const alertDiv = document.createElement("div");
                alertDiv.className = "form-alert error";
                alertDiv.textContent = customErrors[key];
                inputElement.parentNode.insertBefore(
                  alertDiv,
                  inputElement.nextSibling
                );
              }
            }

            // Reset the button text
            btn.textContent = localizedStrings.signUp;
            btn.disabled = false;
          }, 1000); // 1-second delay
        });
      });

      function isStrongPassword(password) {
        // Check for strong password criteria
        const strongPasswordRegex =
          /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&#])[A-Za-z\d@$!%*?&#]{6,}$/;
        return strongPasswordRegex.test(password);
      }
    </script>
  </body>
</html>
